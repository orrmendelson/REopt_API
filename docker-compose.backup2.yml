services:
  redis:
    image: redis
    command: redis-server
    expose:
      - 6379

  postgres:
    image: postgres:latest
    networks:
      - my_network
    environment:
      POSTGRES_DB: reopt
      POSTGRES_USER: reopt_api
      POSTGRES_PASSWORD: reopt
    expose:
      - 5432

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-api-image
    command: celery -A reopt_api worker -l info
    environment:
      - APP_ENV=local
      - REDIS_HOST=redis
    volumes:
      - .:/opt/reopt
    depends_on:
      - postgres
      - redis
      - django
    networks:
      - my_network

#  celery:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: base-api-image
#    command: celery -A reopt_api worker -l info
#    environment:
#      - APP_ENV=local
#      - SQL_HOST=postgres
#      - SQL_PORT=5432
#      - REDIS_HOST=redis
#    volumes:
#      - .:/opt/reopt
#    depends_on:
#      - postgres
#      - redis
#      - julia
#    networks:
#      - my_network


  django:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-api-image
    command: /opt/reopt/bin/wait-for-it.bash -t 0 postgres:5432 -- bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - APP_ENV=local
      - SQL_HOST=postgres
      - SQL_PORT=5432
    volumes:
      - .:/opt/reopt
    depends_on:
      - postgres
      - redis
      - julia
    networks:
      - my_network

#  django:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: base-api-image
#    command: >
#      /opt/reopt/bin/wait-for-it.bash -t 0 julia:8081 -- bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    environment:
#      - APP_ENV=local
#      - SQL_HOST=postgres
#      - SQL_PORT=5432
#      - REDIS_HOST=redis
#      - DATABASE_URL=postgres://reopt_api:reopt@postgres:5432/reopt
#      - DJANGO_SETTINGS_MODULE=reopt_api.dev_settings
#    depends_on:
#      - postgres
#      - redis
#      - julia
#    ports:
#      - 8000:8000
#    volumes:
#      - .:/opt/reopt
#    networks:
#      - my_network

  julia:
    container_name: julia_api
    build:
      context: julia_src/
      dockerfile: Dockerfile
    environment:
      - XPRESS_JL_SKIP_LIB_CHECK=True
      - XPRESS_INSTALLED=False
    command: julia --project=/opt/julia_src http.jl
    ports:
      - "8081:8081"
    volumes:
      - ./julia_src:/opt/julia_src
    networks:
      - my_network

networks:
  my_network:
