services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-api-image
    environment:
      - APP_ENV=local
      - DJANGO_SETTINGS_MODULE=reopt_api.dev_settings  
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    volumes:
      - .:/opt/reopt
      - static_volume:/opt/reopt/static 
      - media_volume:/opt/reopt/media
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - my_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "web"
    env_file:
      - .env

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/opt/reopt/static
    depends_on:
      - web
    networks:
      - my_network

  redis:
    image: redis:latest
    command: redis-server
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5      

  postgres:
    image: postgres:latest
    networks:
      - my_network
    environment:
      POSTGRES_DB: reopt
      POSTGRES_USER: reopt_api
      POSTGRES_PASSWORD: reopt
    expose:
      - 5432

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-api-image
    # command: sh -c "chmod +x /opt/reopt/start_celery.sh && /opt/reopt/start_celery.sh"
    # command: ./start_celery.sh
    # command: celery -A reopt_api worker --loglevel=info
    # command: sh -c "celery -A reopt_api worker --loglevel=info"
    environment:
      - APP_ENV=local
      - DJANGO_SETTINGS_MODULE=reopt_api.dev_settings  
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
    volumes:
      - .:/opt/reopt
    depends_on:
      - postgres
      - redis
    networks:
      - my_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "celery"
    env_file:
      - .env  

  django:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-api-image
    command: ["/bin/bash", "/opt/reopt/start_django.sh"]
    volumes:
      - ./start_django.sh:/opt/reopt/start_django.sh
      - .:/opt/reopt
    tty: true
    stdin_open: true
    environment:
      - APP_ENV=local
      - SQL_HOST=postgres
      - SQL_PORT=5432
      - REDIS_HOST=redis
      - DATABASE_URL=postgres://reopt_api:reopt@postgres:5432/reopt
      - DJANGO_SETTINGS_MODULE=reopt_api.dev_settings
    depends_on:
      - postgres
      - redis
      - julia
    ports:
      - 8000:8000
    networks:
      - my_network
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "3"
    env_file:
      - .env

  julia:
    container_name: julia_api
    build:
      context: julia_src/
      dockerfile: Dockerfile
    environment:
      - XPRESS_JL_SKIP_LIB_CHECK=True
      - XPRESS_INSTALLED=False
    command: julia --project=/opt/julia_src http.jl
    ports:
      - "8081:8081"
    volumes:
      - ./julia_src:/opt/julia_src
    networks:
      - my_network

networks:
  my_network:

volumes:
  static_volume: 
  media_volume: 

